name: Docker Image CI

on:
  push:
    branches:
      - main

  release:
    type:
      - published

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and Push (latest)
      if: github.event_name == 'push'
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        provenance: false
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
          docker.io/${{ env.IMAGE_NAME }}:latest
          ghcr.io/${{ env.IMAGE_NAME }}:latest

    - name: Build and Push New Release
      if: github.event_name == 'release'
      uses: docker/build-push-action@v2
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        provenance: false
        push: true
        labels: ${{ steps.meta.outputs.labels }}
        tags: |
          docker.io/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
          ghcr.io/${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }}
